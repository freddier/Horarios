# -*- coding: UTF-8 -*-
# ğŸ‘† Sin lo de arriba no se puede poner emojis
import pytz
import datetime
import click


@click.command()
@click.option('--date_to_convert', prompt='Generar banderas para la fecha, ejemplo 2020-11-17 21:00:00',
              help='La fecha debe cumplir con el formato %Y-%m-%d %H:%M:%S, ejemplo: 2020-11-17 21:00:00')
def print_flags(date_to_convert):
    print(f'Hora: {date_to_convert}')
    print("Generando bloque de banderas:\n")

    date_to_convert = parse(date_to_convert)
    if date_to_convert is None:
        print(
            "La fecha no cumple con el formato requerido: intentar $> python3 horarios.py "
            "--date_to_convert='2020-11-17 21:00:00'")
    else:
        # En orden de tamaÃ±o de mercado/prioridad
        zones = [
            ["ğŸ‡²ğŸ‡½", "America/Mexico_City"],
            ["ğŸ‡¨ğŸ‡´", "America/Bogota"],
            ["ğŸ‡µğŸ‡ª", "America/Lima"],
            ["ğŸ‡¨ğŸ‡±", "America/Santiago"],
            ["ğŸ‡¦ğŸ‡·", "America/Buenos_Aires"],
            ["ğŸ‡ªğŸ‡¸", "Europe/Madrid"],
            ["ğŸ‡ºğŸ‡¾", "America/Montevideo"],
            ["ğŸ‡ªğŸ‡¨", "America/Guayaquil"],
            ["ğŸ‡¬ğŸ‡¹", "America/Guatemala"],
            ["ğŸ‡¸ğŸ‡»", "America/El_Salvador"],
            ["ğŸ‡§ğŸ‡´", "America/La_Paz"],
            ["ğŸ‡µğŸ‡¾", "America/Asuncion"],
            ["ğŸ‡©ğŸ‡´", "America/Santo_Domingo"],
            ["ğŸ‡µğŸ‡¦", "America/Panama"],
            ["ğŸ‡¨ğŸ‡·", "America/Costa_Rica"],
            ["ğŸ‡­ğŸ‡³", "America/Tegucigalpa"],
            ["ğŸ‡»ğŸ‡ª", "America/Caracas"],
            ["ğŸ‡³ğŸ‡®", "America/Managua"],
            ["ğŸ‡¨ğŸ‡º", "Cuba"],
            ["ğŸ‡ºğŸ‡¸", "US/Pacific"]
        ]

        # Inicializamos el diccionario
        times = {}

        # If you need Brazil:
        # ["ğŸ‡§ğŸ‡·","America/Sao_Paulo"]

        # Los timezones no estÃ¡n derivados de paÃ­ses, sino de ciudades.
        # Aunque la prioridad es por paÃ­s

        for country in zones:
            zone = country[1]
            flag = country[0]
            dtc = date_to_convert.astimezone(pytz.timezone(zone))
            if zone == "Europe/Madrid":
                # Imprime la hora en formato de 24 horas y una "H" al final
                dtc = dtc.strftime("%-HH")
            else:
                # Imprime la hora en formato de 12 horas PM/AM
                dtc = dtc.strftime("%-I%p")
            try:
                times[dtc] = times[dtc] + flag
            except KeyError:
                times[dtc] = flag

            # Si el paÃ­s es USA en Pacific, agregar el "PT" frente a bandera de US
            if zone == "US/Pacific":
                times[dtc] = times[dtc] + " PT"

            times[dtc] = times[dtc] + " "

        for t, c in times.items():
            print(t.lower(), c.strip())


def parse(date_to_convert):
    try:
        return datetime.datetime.strptime(
            date_to_convert, "%Y-%m-%d %H:%M:%S")
    except ValueError:
        return None


if __name__ == '__main__':
    print_flags()
